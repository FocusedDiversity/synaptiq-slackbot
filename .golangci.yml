run:
  timeout: 5m
  tests: false
  skip-dirs:
    - .aws-sam
    - vendor
    - testdata
  skip-files:
    - ".*_test.go"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters:
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused

    # Additional linters
    - bodyclose      # Checks whether HTTP response body is closed
    - dogsled        # Checks assignments with too many blank identifiers
    - dupl           # Tool for code clone detection
    - exportloopref  # Checks for pointers to enclosing loop variables
    - gocognit       # Computes cognitive complexity of functions
    - goconst        # Finds repeated strings that could be constants
    - gocritic       # Provides many useful checks
    - gocyclo        # Computes cyclomatic complexity
    - godot          # Checks if comments end in a period
    - gofumpt        # Stricter gofmt
    - goimports      # Checks imports order
    - goprintffuncname # Checks that printf-like functions are named with 'f' at the end
    - gosec          # Security checker
    - lll            # Reports long lines
    - misspell       # Finds commonly misspelled English words
    - nakedret       # Finds naked returns in large functions
    - nestif         # Reports deeply nested if statements
    - nilerr         # Finds code that returns nil even if it checks for an error
    - noctx          # Finds HTTP requests without context.Context
    - nolintlint     # Reports ill-formed or insufficient nolint directives
    - prealloc       # Finds slice declarations that could potentially be preallocated
    - predeclared    # Finds code that shadows predeclared identifiers
    - revive         # Fast, configurable linter
    - rowserrcheck   # Checks whether Err of rows is checked
    - sqlclosecheck  # Checks that sql.Rows and sql.Stmt are closed
    - stylecheck     # Stylecheck is a replacement for golint
    - thelper        # Detects test helpers without t.Helper()
    - tparallel      # Detects inappropriate usage of t.Parallel()
    - unconvert      # Removes unnecessary type conversions
    - unparam        # Reports unused function parameters
    - wastedassign   # Finds wasted assignment statements
    - whitespace     # Detects leading and trailing whitespace

  disable:
    - exhaustive     # Too strict for most cases
    - gochecknoglobals # We use some globals for Lambda
    - gochecknoinits # We use init for Lambda setup
    - godox          # We want to allow TODO/FIXME comments
    - goerr113       # Too strict about error types
    - gomnd          # Magic numbers are sometimes ok
    - gomodguard     # Not needed for this project
    - testpackage    # We prefer tests in same package
    - wsl            # Too opinionated about whitespace

linters-settings:
  dogsled:
    max-blank-identifiers: 2

  dupl:
    threshold: 150

  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - (*github.com/aws/aws-lambda-go/events.APIGatewayProxyResponse).Write
      - (*bytes.Buffer).Write
      - (*strings.Builder).Write

  gocognit:
    min-complexity: 30

  goconst:
    min-len: 3
    min-occurrences: 3

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations

  goimports:
    local-prefixes: github.com/your-org/standup-bot

  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G204 # Subprocess launched with variable - needed for Lambda

  lll:
    line-length: 120
    tab-width: 4

  misspell:
    locale: US

  nakedret:
    max-func-lines: 30

  nestif:
    min-complexity: 4

  nolintlint:
    allow-unused: false
    allow-leading-space: false
    require-explanation: true
    require-specific: true

  prealloc:
    simple: true
    range-loops: true
    for-loops: true

  revive:
    ignoreGeneratedHeader: true
    severity: warning
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unreachable-code

  stylecheck:
    go: "1.21"
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist:
      - fmt
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    http-status-code-whitelist: ["200", "400", "404", "500"]

  unparam:
    check-exported: false

  whitespace:
    multi-if: true
    multi-func: true

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  fix: true

  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - goconst

    # Exclude known issues in generated files
    - path: "(.*)?generated\\.go"
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - goconst

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude certain rules for Lambda handlers
    - path: "cmd/.*/main\\.go"
      linters:
        - gochecknoglobals
        - gochecknoinits

    # Allow init functions in internal packages
    - path: "internal/.*"
      text: "init function"
      linters:
        - gochecknoinits

  exclude-use-default: false
  exclude:
    # Exclude common false positives
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
    - "exported (type|method|function) (.+) should have comment or be unexported"
    - "ST1000: at least one file in a package should have a package comment"
